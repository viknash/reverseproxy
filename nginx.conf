
worker_processes 1;

events { worker_connections 1024; }

http {

    sendfile on;

    upstream docker-shiori {
        server shiori:8080;
    }

    server {
        listen 8082 ssl http2;
        listen [::]:8082 ssl http2;

        server_name $ENV{"SERVER_NAME"};

        ssl_certificate /etc/nginx/fullchain.pem;
        ssl_certificate_key /etc/nginx/privkey.pem;

        # Turn on OCSP stapling as recommended at 
        # https://community.letsencrypt.org/t/integration-guide/13123 
        # requires nginx version >= 1.3.7
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/nginx/fullchain.pem;
        resolver 1.1.1.1 valid=300s;

        ssl_session_timeout 30m;
        ssl_session_cache shared:SSL:20m;
        ssl_session_tickets off;

        # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
        ssl_dhparam /etc/nginx/dhparam.pem;

        ssl_protocols TLSv1.2;
        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
        # Enables server-side protection from BEAST attacks
        ssl_prefer_server_ciphers on;
        
# Uncomment this line only after testing in browsers,
        # as it commits you to continuing to serve your site over HTTPS
        # in future
        # add_header Strict-Transport-Security "max-age=31536000";

        #access_log /var/log/nginx/sub.log combined;

        location / {
            proxy_pass         http://docker-shiori;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}
